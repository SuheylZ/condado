//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Dashboard", "FK__dashboard__ann_s__4F5E6B2A", "dashboard_section", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SalesTool.DataAccess.Models.Section), "dashboard_announcements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SalesTool.DataAccess.Models.Announcement), true)]

#endregion

namespace SalesTool.DataAccess.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DashboardEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DashboardEntities object using the connection string found in the 'DashboardEntities' section of the application configuration file.
        /// </summary>
        public DashboardEntities() : base("name=DashboardEntities", "DashboardEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DashboardEntities object.
        /// </summary>
        public DashboardEntities(string connectionString) : base(connectionString, "DashboardEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DashboardEntities object.
        /// </summary>
        public DashboardEntities(EntityConnection connection) : base(connection, "DashboardEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Announcement> Announcements
        {
            get
            {
                if ((_Announcements == null))
                {
                    _Announcements = base.CreateObjectSet<Announcement>("Announcements");
                }
                return _Announcements;
            }
        }
        private ObjectSet<Announcement> _Announcements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportType> ReportTypes
        {
            get
            {
                if ((_ReportTypes == null))
                {
                    _ReportTypes = base.CreateObjectSet<ReportType>("ReportTypes");
                }
                return _ReportTypes;
            }
        }
        private ObjectSet<ReportType> _ReportTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Section> Sections
        {
            get
            {
                if ((_Sections == null))
                {
                    _Sections = base.CreateObjectSet<Section>("Sections");
                }
                return _Sections;
            }
        }
        private ObjectSet<Section> _Sections;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Announcements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnnouncements(Announcement announcement)
        {
            base.AddObject("Announcements", announcement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportTypes(ReportType reportType)
        {
            base.AddObject("ReportTypes", reportType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSections(Section section)
        {
            base.AddObject("Sections", section);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sectionId">No Metadata Documentation available.</param>
        /// <param name="title">No Metadata Documentation available.</param>
        /// <param name="order">No Metadata Documentation available.</param>
        /// <param name="body">No Metadata Documentation available.</param>
        public int AddAnnouncementBySection(Nullable<global::System.Int32> sectionId, global::System.String title, Nullable<global::System.Int32> order, global::System.String body)
        {
            ObjectParameter sectionIdParameter;
            if (sectionId.HasValue)
            {
                sectionIdParameter = new ObjectParameter("sectionId", sectionId);
            }
            else
            {
                sectionIdParameter = new ObjectParameter("sectionId", typeof(global::System.Int32));
            }
    
            ObjectParameter titleParameter;
            if (title != null)
            {
                titleParameter = new ObjectParameter("title", title);
            }
            else
            {
                titleParameter = new ObjectParameter("title", typeof(global::System.String));
            }
    
            ObjectParameter orderParameter;
            if (order.HasValue)
            {
                orderParameter = new ObjectParameter("order", order);
            }
            else
            {
                orderParameter = new ObjectParameter("order", typeof(global::System.Int32));
            }
    
            ObjectParameter bodyParameter;
            if (body != null)
            {
                bodyParameter = new ObjectParameter("body", body);
            }
            else
            {
                bodyParameter = new ObjectParameter("body", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AddAnnouncementBySection", sectionIdParameter, titleParameter, orderParameter, bodyParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        public int DeleteAnnouncement(Nullable<global::System.Int32> id)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("DeleteAnnouncement", idParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sectionId">No Metadata Documentation available.</param>
        public ObjectResult<GetAnnouncementBySectionRS> GetAnnouncementBySection(Nullable<global::System.Int32> sectionId)
        {
            ObjectParameter sectionIdParameter;
            if (sectionId.HasValue)
            {
                sectionIdParameter = new ObjectParameter("sectionId", sectionId);
            }
            else
            {
                sectionIdParameter = new ObjectParameter("sectionId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<GetAnnouncementBySectionRS>("GetAnnouncementBySection", sectionIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<GetReportsRS> GetReports()
        {
            return base.ExecuteFunction<GetReportsRS>("GetReports");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="id">No Metadata Documentation available.</param>
        /// <param name="sectionId">No Metadata Documentation available.</param>
        /// <param name="active">No Metadata Documentation available.</param>
        /// <param name="title">No Metadata Documentation available.</param>
        /// <param name="order">No Metadata Documentation available.</param>
        /// <param name="body">No Metadata Documentation available.</param>
        public int UpdateAnnouncement(Nullable<global::System.Int32> id, Nullable<global::System.Int32> sectionId, Nullable<global::System.Boolean> active, global::System.String title, Nullable<global::System.Int32> order, global::System.String body)
        {
            ObjectParameter idParameter;
            if (id.HasValue)
            {
                idParameter = new ObjectParameter("id", id);
            }
            else
            {
                idParameter = new ObjectParameter("id", typeof(global::System.Int32));
            }
    
            ObjectParameter sectionIdParameter;
            if (sectionId.HasValue)
            {
                sectionIdParameter = new ObjectParameter("sectionId", sectionId);
            }
            else
            {
                sectionIdParameter = new ObjectParameter("sectionId", typeof(global::System.Int32));
            }
    
            ObjectParameter activeParameter;
            if (active.HasValue)
            {
                activeParameter = new ObjectParameter("active", active);
            }
            else
            {
                activeParameter = new ObjectParameter("active", typeof(global::System.Boolean));
            }
    
            ObjectParameter titleParameter;
            if (title != null)
            {
                titleParameter = new ObjectParameter("title", title);
            }
            else
            {
                titleParameter = new ObjectParameter("title", typeof(global::System.String));
            }
    
            ObjectParameter orderParameter;
            if (order.HasValue)
            {
                orderParameter = new ObjectParameter("order", order);
            }
            else
            {
                orderParameter = new ObjectParameter("order", typeof(global::System.Int32));
            }
    
            ObjectParameter bodyParameter;
            if (body != null)
            {
                bodyParameter = new ObjectParameter("body", body);
            }
            else
            {
                bodyParameter = new ObjectParameter("body", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("UpdateAnnouncement", idParameter, sectionIdParameter, activeParameter, titleParameter, orderParameter, bodyParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Dashboard", Name="Announcement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Announcement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Announcement object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Announcement CreateAnnouncement(global::System.Int32 id, global::System.Int32 order, global::System.String title)
        {
            Announcement announcement = new Announcement();
            announcement.Id = id;
            announcement.Order = order;
            announcement.Title = title;
            return announcement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SectionId
        {
            get
            {
                return _SectionId;
            }
            set
            {
                OnSectionIdChanging(value);
                ReportPropertyChanging("SectionId");
                _SectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SectionId");
                OnSectionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SectionId;
        partial void OnSectionIdChanging(Nullable<global::System.Int32> value);
        partial void OnSectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.Int32 _Order;
        partial void OnOrderChanging(global::System.Int32 value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdded;
        partial void OnDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Dashboard", "FK__dashboard__ann_s__4F5E6B2A", "dashboard_section")]
        public Section Sections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("Dashboard.FK__dashboard__ann_s__4F5E6B2A", "dashboard_section").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("Dashboard.FK__dashboard__ann_s__4F5E6B2A", "dashboard_section").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Section> SectionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Section>("Dashboard.FK__dashboard__ann_s__4F5E6B2A", "dashboard_section");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Section>("Dashboard.FK__dashboard__ann_s__4F5E6B2A", "dashboard_section", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Dashboard", Name="ReportType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        /// <param name="order">Initial value of the Order property.</param>
        public static ReportType CreateReportType(global::System.Int32 id, global::System.String title, global::System.Boolean isDefault, global::System.Int16 order)
        {
            ReportType reportType = new ReportType();
            reportType.Id = id;
            reportType.Title = title;
            reportType.IsDefault = isDefault;
            reportType.Order = order;
            return reportType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Order
        {
            get
            {
                return _Order;
            }
            set
            {
                OnOrderChanging(value);
                ReportPropertyChanging("Order");
                _Order = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Order");
                OnOrderChanged();
            }
        }
        private global::System.Int16 _Order;
        partial void OnOrderChanging(global::System.Int16 value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSenior
        {
            get
            {
                return _IsSenior;
            }
            set
            {
                OnIsSeniorChanging(value);
                ReportPropertyChanging("IsSenior");
                _IsSenior = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSenior");
                OnIsSeniorChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSenior;
        partial void OnIsSeniorChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSeniorChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Dashboard", Name="Section")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Section : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Section object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Section CreateSection(global::System.Int32 id, global::System.String title)
        {
            Section section = new Section();
            section.Id = id;
            section.Title = title;
            return section;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Dashboard", "FK__dashboard__ann_s__4F5E6B2A", "dashboard_announcements")]
        public EntityCollection<Announcement> Announcements
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Announcement>("Dashboard.FK__dashboard__ann_s__4F5E6B2A", "dashboard_announcements");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Announcement>("Dashboard.FK__dashboard__ann_s__4F5E6B2A", "dashboard_announcements", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Dashboard", Name="GetAnnouncementBySectionRS")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetAnnouncementBySectionRS : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetAnnouncementBySectionRS object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static GetAnnouncementBySectionRS CreateGetAnnouncementBySectionRS(global::System.Int32 id, global::System.String title)
        {
            GetAnnouncementBySectionRS getAnnouncementBySectionRS = new GetAnnouncementBySectionRS();
            getAnnouncementBySectionRS.ID = id;
            getAnnouncementBySectionRS.Title = title;
            return getAnnouncementBySectionRS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdded;
        partial void OnDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Dashboard", Name="GetReportsRS")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetReportsRS : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetReportsRS object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static GetReportsRS CreateGetReportsRS(global::System.Int32 id, global::System.String title, global::System.Boolean isActive)
        {
            GetReportsRS getReportsRS = new GetReportsRS();
            getReportsRS.ID = id;
            getReportsRS.Title = title;
            getReportsRS.IsActive = isActive;
            return getReportsRS;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                OnIDChanging(value);
                ReportPropertyChanging("ID");
                _ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID");
                OnIDChanged();
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    }

    #endregion

    
}
